<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kopo.poly.mapper.IUserInfoMapper">

<!--   <select id="getEmailExists2" parameterType="UserInfoDTO" resultType="UserInfoDTO">-->
<!--        SELECT-->
<!--            IF(COUNT(USER_ID) > 0, 'Y', 'N') AS EXISTS_YN-->
<!--        FROM USER_INFO-->
<!--    </select>-->

    <select id="getUserIdExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT
            IF(COUNT(USER_ID) > 0, 'Y', 'N') AS EXISTS_YN
        FROM USER_INFO
        WHERE USER_ID = #{userId}
    </select>

    <select id="getEmailExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT
            IF(COUNT(USER_ID) > 0, 'Y', 'N') AS EXISTS_YN
        FROM USER_INFO
        WHERE EMAIL = #{email}
    </select>

    <select id="getLogin" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL
        FROM USER_INFO
        WHERE USER_ID = #{userId}
          AND PASSWORD = #{password}
    </select>

    <select id="getUserId" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT
            USER_ID,
            USER_NAME,
            EMAIL
        FROM USER_INFO
        WHERE 1=1
        <if test="userId neq null and userId neq '' ">
            AND USER_ID = #{userId}
        </if>
        AND USER_NAME = #{userName}
        AND EMAIL = #{email}
    </select>

    <insert id="insertUserInfo" parameterType="UserInfoDTO">
        INSERT INTO USER_INFO
        (USER_ID,
         USER_NAME,
         PASSWORD,
         EMAIL,
         ADDR1,
         ADDR2,
         REG_ID,
         REG_DT,
         CHG_ID,
         CHG_DT)
        VALUES (#{userId},
                #{userName},
                #{password},
                #{email},
                #{addr1},
                #{addr2},
                #{userId},
                NOW(),
                #{userId},
                NOW())
    </insert>

    <update id="updatePassword" parameterType="UserInfoDTO">
        UPDATE USER_INFO
        SET PASSWORD = #{password}
        WHERE USER_ID = #{userId}
    </update>

    <insert id="insertToken">
        INSERT INTO RESET_PW_TOKEN (USER_ID, TOKEN_HASH, EXPIRES_AT)
        VALUES (#{userId}, #{tokenHash}, #{expiresAt})
    </insert>

    <select id="getValidToken" resultType="map">
        SELECT TOKEN_ID, USER_ID, EXPIRES_AT, USED_YN
        FROM RESET_PW_TOKEN
        WHERE TOKEN_HASH = #{tokenHash}
          AND USED_YN = 'N'
          AND EXPIRES_AT > CURRENT_TIMESTAMP
            LIMIT 1
    </select>

    <update id="consumeToken">
        UPDATE RESET_PW_TOKEN
        SET USED_YN = 'Y'
        WHERE TOKEN_HASH = #{tokenHash}
    </update>

    <select id="getUserByEmail" parameterType="string" resultType="UserInfoDTO">
        SELECT USER_ID, EMAIL
        FROM USER_INFO
        WHERE EMAIL = #{email}
            LIMIT 1
    </select>
</mapper>