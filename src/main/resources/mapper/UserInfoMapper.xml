<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kopo.poly.mapper.IUserInfoMapper">

    <!-- 아이디 존재 여부 -->
    <select id="getUserIdExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT IF(COUNT(USER_ID) > 0, 'Y', 'N') AS existsYn
        FROM USER_INFO
        WHERE USER_ID = #{userId}
    </select>

    <!-- 이메일 존재 여부 -->
    <select id="getEmailExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT IF(COUNT(USER_ID) > 0, 'Y', 'N') AS existsYn
        FROM USER_INFO
        WHERE EMAIL = #{email}
    </select>

    <!-- 로그인 (주의: 지금은 평문 비교) -->
    <select id="getLogin" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL,
               PROFILE_IMAGE_URL, NOTIFY_EMAIL, UPDATED_AT
        FROM USER_INFO
        WHERE USER_ID = #{userId}
          AND PASSWORD = #{password}
    </select>

    <!-- 사용자 정보 조회(마이페이지용) -->
    <select id="findUserById" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID           AS userId,
               USER_NAME         AS userName,
               EMAIL             AS email,
               ADDR1             AS addr1,
               ADDR2             AS addr2,
               PROFILE_IMAGE_URL AS profileImageUrl,
               NOTIFY_EMAIL      AS notifyEmail,
               REG_ID            AS regId,
               REG_DT            AS regDt,
               CHG_ID            AS chgId,
               CHG_DT            AS chgDt,
               UPDATED_AT        AS updatedAt
        FROM USER_INFO
        WHERE USER_ID = #{userId}
    </select>

    <!-- 사용자 찾기 (오타 수정: neq → !=) -->
    <select id="getUserId" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL
        FROM USER_INFO
        WHERE 1=1
        <if test="userId != null and userId != ''">
            AND USER_ID = #{userId}
        </if>
        AND USER_NAME = #{userName}
        AND EMAIL = #{email}
    </select>

    <!-- 회원가입 -->
    <insert id="insertUserInfo" parameterType="UserInfoDTO">
        INSERT INTO USER_INFO
        (USER_ID, USER_NAME, PASSWORD, EMAIL, ADDR1, ADDR2,
         REG_ID, REG_DT, CHG_ID, CHG_DT, NOTIFY_EMAIL)
        VALUES (#{userId}, #{userName}, #{password}, #{email}, #{addr1}, #{addr2},
                #{userId}, NOW(), #{userId}, NOW(), 1)
    </insert>

    <!-- 비밀번호 변경 (UPDATED_AT 갱신) -->
    <update id="updatePassword" parameterType="UserInfoDTO">
        UPDATE USER_INFO
        SET PASSWORD  = #{password},
            UPDATED_AT = NOW(),
            CHG_ID     = #{userId},
            CHG_DT     = NOW()
        WHERE USER_ID = #{userId}
    </update>

    <!-- 프로필/알림 부분 업데이트 (null/빈값 미반영) -->
    <update id="updateProfile" parameterType="UserInfoDTO">
        UPDATE USER_INFO
        <set>
            <if test="userName != null and userName != ''">
                USER_NAME = #{userName},
            </if>
            <if test="addr1 != null and addr1 != ''">
                ADDR1 = #{addr1},
            </if>
            <if test="addr2 != null and addr2 != ''">
                ADDR2 = #{addr2},
            </if>
            <if test="profileImageUrl != null and profileImageUrl != ''">
                PROFILE_IMAGE_URL = #{profileImageUrl},
            </if>
            <if test="notifyEmail != null">
                NOTIFY_EMAIL = #{notifyEmail},
            </if>
            UPDATED_AT = NOW(),
            CHG_ID     = #{userId},
            CHG_DT     = NOW()
        </set>
        WHERE USER_ID = #{userId}
    </update>

</mapper>
